pipeline {
  agent any

  environment {
    NODE_ENV = 'development'
    ANDROID_HOME = '/opt/android-sdk'
    PATH = "${ANDROID_HOME}/cmdline-tools/latest/bin:${ANDROID_HOME}/platform-tools:${ANDROID_HOME}/emulator:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${PATH}"
  }

  tools {
    nodejs 'jsnode' // Must match the name configured in Jenkins global tool config
  }

  stages {
    stage('Checkout Code') {
      steps {
        git branch: 'main', url: 'https://github.com/rohanPSI-1122/react.git', credentialsId: 'rohanPSI-1122'
      }
    }

    stage('Install Dependencies') {
      steps {
        dir('android') {
          sh 'npm install --legacy-peer-deps'
        }
      }
    }

    stage('Lint') {
      steps {
        dir('android') {
          script {
            try {
              sh 'npx eslint .'
            } catch (Exception e) {
              echo "⚠️ Linting failed or ESLint not installed. Continuing..."
            }
          }
        }
      }
    }

    stage('Test') {
      steps {
        dir('android') {
          script {
            try {
              sh 'npm test'
            } catch (Exception e) {
              echo "⚠️ Tests failed or not defined. Continuing..."
            }
          }
        }
      }
    }

    stage('Build APK') {
      steps {
        dir('android') {
          // Ensure gradlew is executable
          sh 'chmod +x gradlew'
          sh './gradlew assembleDebug'
        }
      }
    }

    stage('Archive APK') {
      steps {
        dir('android') {
          archiveArtifacts artifacts: '**/app/build/outputs/**/*.apk', fingerprint: true
        }
      }
    }
  }

  post {
    success {
      echo "✅ Build completed successfully!"
    }
    failure {
      echo "❌ Build failed."
    }
  }
}
